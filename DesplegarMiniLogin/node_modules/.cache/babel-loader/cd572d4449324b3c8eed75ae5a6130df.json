{"remainingRequest":"C:\\Users\\NeoKhazar\\source\\repos\\ProyectoFinal2\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\NeoKhazar\\source\\repos\\ProyectoFinal2\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\NeoKhazar\\source\\repos\\ProyectoFinal2\\src\\store.js","dependencies":[{"path":"C:\\Users\\NeoKhazar\\source\\repos\\ProyectoFinal2\\src\\store.js","mtime":1588545116479},{"path":"C:\\Users\\NeoKhazar\\source\\repos\\ProyectoFinal2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\NeoKhazar\\source\\repos\\ProyectoFinal2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\NeoKhazar\\source\\repos\\ProyectoFinal2\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from \"./axios-auth\";\nimport globalAxios from 'axios';\nimport router from \"./router\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    idToken: null,\n    userId: null,\n    user: null\n  },\n  mutations: {\n    authUser: function authUser(state, userData) {\n      state.idToken = userData.token;\n      state.userId = userData.userId;\n    },\n    storeUser: function storeUser(state, user) {\n      state.user = user;\n    },\n    clearAuthData: function clearAuthData(state) {\n      state.idToken = null;\n      state.userId = null;\n    }\n  },\n  actions: {\n    signup: function signup(_ref, authData) {\n      var commit = _ref.commit,\n          dispatch = _ref.dispatch;\n      axios.post('/accounts:signUp?key=AIzaSyA-BUcALtHt-uXcgr44VnF_as8kbEwBA4Y', {\n        email: authData.email,\n        password: authData.password,\n        returnSecureToken: true\n      }).then(function (res) {\n        console.log(res);\n        commit('authUser', {\n          token: res.data.idToken,\n          userId: res.data.localId\n        });\n      });\n      dispatch('storeUser', authData).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    login: function login(_ref2, authData) {\n      var commit = _ref2.commit;\n      axios.post('/accounts:signInWithPassword?key=AIzaSyA-BUcALtHt-uXcgr44VnF_as8kbEwBA4Y', {\n        email: authData.email,\n        password: authData.password,\n        returnSecureToken: true\n      }).then(function (res) {\n        console.log(res);\n        commit('authUser', {\n          token: res.data.idToken,\n          userId: res.data.localId\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    logout: function logout(_ref3) {\n      var commit = _ref3.commit;\n      commit('clearAuthData');\n      localStorage.removeItem('expirationDate');\n      localStorage.removeItem('token');\n      localStorage.removeItem('userId');\n      router.replace('/signin');\n    },\n    storeUser: function storeUser(_ref4, userData) {\n      var commit = _ref4.commit,\n          state = _ref4.state;\n\n      if (!state.idToken) {\n        return;\n      }\n\n      globalAxios.post('/users.json' + '?auth=' + state.idToken, userData).then(function (res) {\n        return console.log(res);\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    fetchUser: function fetchUser(_ref5) {\n      var commit = _ref5.commit,\n          state = _ref5.state;\n\n      if (!state.idToken) {\n        return;\n      }\n\n      globalAxios.get('/users.json' + '?auth=' + state.idToken).then(function (res) {\n        console.log(res);\n        var data = res.data;\n        var users = [];\n\n        for (var key in data) {\n          var user = data[key];\n          user.id = key;\n          users.push(user);\n        }\n\n        console.log(users);\n        commit('storeUser', users[0]);\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  },\n  getters: {\n    user: function user(state) {\n      return state.user;\n    },\n    isAuthenticated: function isAuthenticated(state) {\n      return state.idToken !== null;\n    }\n  }\n});",{"version":3,"sources":["C:\\Users\\NeoKhazar\\source\\repos\\ProyectoFinal2\\src\\store.js"],"names":["Vue","Vuex","axios","globalAxios","router","use","Store","state","idToken","userId","user","mutations","authUser","userData","token","storeUser","clearAuthData","actions","signup","authData","commit","dispatch","post","email","password","returnSecureToken","then","console","log","res","data","localId","catch","error","login","logout","localStorage","removeItem","replace","fetchUser","get","users","key","id","push","getters","isAuthenticated"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from './axios-auth'\nimport globalAxios from 'axios'\nimport router from './router'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n        idToken: null,\n        userId: null,\n        user: null\n  },\n  mutations: {\n      authUser(state, userData) {\n          state.idToken = userData.token\r\n          state.userId = userData.userId\r\n      },\n      storeUser(state, user) {\n          state.user = user\r\n      },\n      clearAuthData(state) {\n          state.idToken = null\n          state.userId = null\n      }\n  },\n  actions: {\n      signup({ commit,dispatch },authData) {\n          axios.post('/accounts:signUp?key=AIzaSyA-BUcALtHt-uXcgr44VnF_as8kbEwBA4Y', {\n              email: authData.email,\n              password: authData.password,\n              returnSecureToken: true\n          })\n              .then(res => {\n                  console.log(res)\r\n                  commit('authUser', {\r\n                      token: res.data.idToken,\r\n                      userId: res.data.localId\r\n                  })\r\n              })\n               dispatch('storeUser',authData)\n              .catch(error => console.log(error))\r\n      },\n      login({ commit }, authData) {\n          axios.post('/accounts:signInWithPassword?key=AIzaSyA-BUcALtHt-uXcgr44VnF_as8kbEwBA4Y', {\n              email: authData.email,\n              password: authData.password,\n              returnSecureToken: true\n          })\n              .then(res => {\n                  console.log(res)\r\n                  commit('authUser', {\r\n                      token: res.data.idToken,\r\n                      userId: res.data.localId\r\n                  })\r\n              })\n              .catch(error => console.log(error))\r\n      },\n      logout({ commit }) {\n          commit('clearAuthData')\n          localStorage.removeItem('expirationDate')\n          localStorage.removeItem('token')\n          localStorage.removeItem('userId')\n          router.replace('/signin')\n      },\n      storeUser({ commit, state }, userData) {\n          if (!state.idToken) {\n              return\n          }\n          globalAxios.post('/users.json' + '?auth=' + state.idToken, userData)\n              .then(res => console.log(res))\n              .catch(error => console.log(error))\n      },\n      fetchUser({ commit, state }) {\n          if (!state.idToken) {\n              return\n          }\n          globalAxios.get('/users.json' + '?auth=' + state.idToken)\n              .then(res => {\n                  console.log(res)\n                  const data = res.data\n                  const users = []\n                  for (let key in data) {\n                      const user = data[key]\n                      user.id = key\n                      users.push(user)\n                  }\n                  console.log(users)\n                  commit('storeUser', users[0])\n              })\n              .catch(error => console.log(error))\n      }\n  },\n  getters: {\n      user(state) {\n          return state.user\r\n      },\n      isAuthenticated(state) {\n          return state.idToken !== null\n      }\n  }\n})"]}]}